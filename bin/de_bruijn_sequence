#!/usr/bin/env python3
# encoding: utf-8

'''
This script calculates a De Bruijn sequence B(k, n) given the two input
parameters k (alphabet size) and n (subsequence length).
The de_bruijn() function is in its entirety taken from:
http://en.wikipedia.org/wiki/De_Bruijn_sequence#Algorithm
'''

import sys


def de_bruijn(k, n):
    a = [0] * k * n
    sequence = []

    def db(t, p):
        if t > n:
            if n % p == 0:
                for j in range(1, p + 1):
                    sequence.append(a[j])
        else:
            a[t] = a[t - p]
            db(t + 1, p)
            for j in range(a[t - p] + 1, k):
                a[t] = j
                db(t + 1, t)

    db(1, 1)

    return sequence

if len(sys.argv) != 3:
    print('You must provide two input parameters:')
    print('• k (alphabet size)')
    print('• n (subsequence length)')
    sys.exit(1)

k = int(sys.argv[1])
n = int(sys.argv[2])

print(''.join([str(x) for x in de_bruijn(k, n)]))
